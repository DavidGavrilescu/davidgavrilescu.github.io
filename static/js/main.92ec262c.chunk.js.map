{"version":3,"sources":["data/hiragana.js","data/randomHiragana.js","App.js","reportWebVitals.js","index.js"],"names":["hiraganaArray","Array","prototype","random","this","Math","floor","length","RandomHiragana","Hiragana","App","useState","randomHiragana","kana","setKana","revealed","setRevealed","kanaType","className","onClick","toRomaji","toKatakana","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAgFeA,EAhFO,CACrB,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UC5EDC,MAAMC,UAAUC,OAAS,WACxB,OAAOC,KAAKC,KAAKC,MAAMD,KAAKF,SAAWC,KAAKG,UAG7C,IAIeC,EAJQ,WACtB,OAAOC,EAASN,U,sBCFF,SAASO,IACvB,MAAwBC,mBAASC,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAgCL,mBAAS,YAAzC,mBAAOM,EAAP,UAaA,OACC,sBAAKC,UAAU,MAAf,UACC,qBAAKA,UAAU,SAASC,QAbH,WACtBH,GAAaD,IAYZ,SACEA,EAAWK,mBAASP,GAAQ,QAE9B,qBAAKK,UAAU,SAASC,QAbP,WAClBL,EAAQF,KACRI,GAAY,IAWX,SACe,aAAbC,EAA0BJ,EAAOQ,qBAAWR,QC3BjD,IAYeS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.92ec262c.chunk.js","sourcesContent":["const hiraganaArray = [\r\n\t\"あ\",\r\n\t\"い\",\r\n\t\"う\",\r\n\t\"え\",\r\n\t\"お\",\r\n\t\"か\",\r\n\t\"き\",\r\n\t\"く\",\r\n\t\"け\",\r\n\t\"こ\",\r\n\t\"さ\",\r\n\t\"し\",\r\n\t\"す\",\r\n\t\"せ\",\r\n\t\"そ\",\r\n\t\"た\",\r\n\t\"ち\",\r\n\t\"つ\",\r\n\t\"て\",\r\n\t\"と\",\r\n\t\"な\",\r\n\t\"に\",\r\n\t\"ぬ\",\r\n\t\"ね\",\r\n\t\"の\",\r\n\t\"は\",\r\n\t\"ひ\",\r\n\t\"ふ\",\r\n\t\"へ\",\r\n\t\"ほ\",\r\n\t\"ま\",\r\n\t\"み\",\r\n\t\"む\",\r\n\t\"め\",\r\n\t\"も\",\r\n\t\"や\",\r\n\t\"ゆ\",\r\n\t\"よ\",\r\n\t\"ら\",\r\n\t\"り\",\r\n\t\"る\",\r\n\t\"れ\",\r\n\t\"ろ\",\r\n\t\"わ\",\r\n\t\"ゐ\",\r\n\t\"ゑ\",\r\n\t\"を\",\r\n\t\"ん\",\r\n\t\"が\",\r\n\t\"ぎ\",\r\n\t\"ぐ\",\r\n\t\"げ\",\r\n\t\"ご\",\r\n\t\"ざ\",\r\n\t\"じ\",\r\n\t\"ず\",\r\n\t\"ぜ\",\r\n\t\"ぞ\",\r\n\t\"だ\",\r\n\t\"ぢ\",\r\n\t\"づ\",\r\n\t\"で\",\r\n\t\"ど\",\r\n\t\"ば\",\r\n\t\"び\",\r\n\t\"ぶ\",\r\n\t\"べ\",\r\n\t\"ぼ\",\r\n\t\"ぱ\",\r\n\t\"ぴ\",\r\n\t\"ぷ\",\r\n\t\"ぺ\",\r\n\t\"ぽ\",\r\n\t\"ぁ\",\r\n\t\"ぃ\",\r\n\t\"ぅ\",\r\n\t\"ぇ\",\r\n\t\"ぉ\",\r\n];\r\nexport default hiraganaArray;\r\n","import Hiragana from \"./hiragana\";\r\n\r\nArray.prototype.random = function () {\r\n\treturn this[Math.floor(Math.random() * this.length)];\r\n};\r\n\r\nconst RandomHiragana = () => {\r\n\treturn Hiragana.random();\r\n};\r\n\r\nexport default RandomHiragana;\r\n","import React, { useState } from \"react\";\nimport randomHiragana from \"./data/randomHiragana\";\nimport { toRomaji, toKatakana } from \"wanakana\";\nimport \"./styles/App.css\";\n\nexport default function App() {\n\tconst [kana, setKana] = useState(randomHiragana());\n\tconst [revealed, setRevealed] = useState(false);\n\tconst [kanaType, setKanaType] = useState(\"hiragana\");\n\n\tconst toggleRevealed = () => {\n\t\tsetRevealed(!revealed);\n\t};\n\tconst randomKana = () => {\n\t\tsetKana(randomHiragana());\n\t\tsetRevealed(false);\n\t};\n\tconst toggleKanaType = () => {\n\t\tkanaType === \"hiragana\" ? setKanaType(\"katakana\") : setKanaType(\"hiragana\");\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"romaji\" onClick={toggleRevealed}>\n\t\t\t\t{revealed ? toRomaji(kana) : \"???\"}\n\t\t\t</div>\n\t\t\t<div className=\"symbol\" onClick={randomKana}>\n\t\t\t\t{kanaType === \"hiragana\" ? kana : toKatakana(kana)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}